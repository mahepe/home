(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{142:function(e,n,t){"use strict";t.r(n);t(74);var a=t(0),r=t.n(a),i=(t(147),t(162)),o=t.n(i),s=t(265),c=t.n(s),l=t(155),p=t(152),d=t(266),h=t.n(d),u=t(267),m=t.n(u);t(454);n.default=function(){var e=r.a.createElement(o.a,{source:h.a});return r.a.createElement(l.a,null,r.a.createElement(p.a,{title:"Home",keywords:["gatsby","application","react"]}),r.a.createElement("div",{className:"content_container"},r.a.createElement("div",{className:"inner_container container p-5"},r.a.createElement("div",{id:"post_container",className:"row"},r.a.createElement("div",{className:"col-md-2"}),r.a.createElement("div",{className:"col-md-8"},r.a.createElement("a",{href:"https://github.com/mahepe/pixijs-effect"},r.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"50",height:"50",viewBox:"0 0 24 24"},r.a.createElement("path",{d:"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"}))),e),r.a.createElement("div",{className:"col-md-2"})))),function(){try{"undefined"!=typeof document&&c()(document).ready(function(){document.querySelectorAll("pre code").forEach(function(e){m.a.highlightBlock(e)}),c()("h2").addClass("mt-5 mb-5"),c()("h3").addClass("mt-5 mb-4")})}catch(e){}}())}},147:function(e,n,t){"use strict";t.d(n,"b",function(){return p});var a=t(0),r=t.n(a),i=t(4),o=t.n(i),s=t(32),c=t.n(s);t.d(n,"a",function(){return c.a}),t.d(n,"c",function(){return s.withPrefix});t(148);var l=r.a.createContext({}),p=function(e){return r.a.createElement(l.Consumer,null,function(n){return e.data||n[e.query]&&n[e.query].data?(e.render||e.children)(e.data?e.data.data:n[e.query].data):r.a.createElement("div",null,"Loading (StaticQuery)")})};p.propTypes={data:o.a.object,query:o.a.string.isRequired,render:o.a.func,children:o.a.func}},148:function(e,n,t){var a;e.exports=(a=t(151))&&a.default||a},151:function(e,n,t){"use strict";t.r(n);t(33);var a=t(0),r=t.n(a),i=t(4),o=t.n(i),s=t(54),c=t(2),l=function(e){var n=e.location,t=c.default.getResourcesForPathnameSync(n.pathname);return r.a.createElement(s.a,Object.assign({location:n,pageResources:t},t.json))};l.propTypes={location:o.a.shape({pathname:o.a.string.isRequired}).isRequired},n.default=l},152:function(e,n,t){"use strict";var a=t(153),r=t(0),i=t.n(r),o=t(4),s=t.n(o),c=t(150),l=t.n(c),p=t(147);function d(e){var n=e.description,t=e.lang,r=e.meta,o=e.keywords,s=e.title;return i.a.createElement(p.b,{query:h,render:function(e){var a=n||e.site.siteMetadata.description;return i.a.createElement(l.a,{htmlAttributes:{lang:t},title:s,titleTemplate:"%s | "+e.site.siteMetadata.title,meta:[{name:"description",content:a},{property:"og:title",content:s},{property:"og:description",content:a},{property:"og:type",content:"website"},{name:"twitter:card",content:"summary"},{name:"twitter:creator",content:e.site.siteMetadata.author},{name:"twitter:title",content:s},{name:"twitter:description",content:a}].concat(o.length>0?{name:"keywords",content:o.join(", ")}:[]).concat(r)})},data:a})}d.defaultProps={lang:"en",meta:[],keywords:[]},d.propTypes={description:s.a.string,lang:s.a.string,meta:s.a.array,keywords:s.a.arrayOf(s.a.string),title:s.a.string.isRequired},n.a=d;var h="1025518380"},153:function(e){e.exports={data:{site:{siteMetadata:{title:"Matias Heikkilä's homepage",description:"I'm doing a PhD in statistics and I write code sometimes.",author:"Matias Heikkilä"}}}}},155:function(e,n,t){"use strict";t(73);var a=t(156),r=t(0),i=t.n(r),o=t(150),s=t.n(o),c=t(4),l=t.n(c),p=t(147),d=t(159);t(158);d.a.initialize("UA-135033691-1"),"undefined"!=typeof window&&d.a.pageview(window.location.pathname+window.location.search);var h=function(e){var n=e.children;return i.a.createElement(p.b,{query:"755544856",render:function(e){return i.a.createElement(i.a.Fragment,null,i.a.createElement(s.a,null,i.a.createElement("link",{rel:"stylesheet",href:"https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css",integrity:"sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS",crossOrigin:"anonymous"})),i.a.createElement("div",null,i.a.createElement("div",null,i.a.createElement("nav",{className:"navbar navbar-light"},i.a.createElement(p.a,{id:"back_to_main",to:"/"},i.a.createElement("span",{id:"hello"},"Hello"),",",i.a.createElement("br",null),"I'm Matias"))),i.a.createElement("main",null,n),i.a.createElement("footer",null,i.a.createElement("div",{className:"container text-center"},"© ",(new Date).getFullYear(),", Built with"," ",i.a.createElement("a",{href:"https://www.gatsbyjs.org"},"Gatsby"),".",i.a.createElement(p.a,{to:"/privacy"}," Privacy policy")))))},data:a})};h.propTypes={children:l.a.node.isRequired},n.a=h},156:function(e){e.exports={data:{site:{siteMetadata:{title:"Matias Heikkilä's homepage"}}}}},266:function(e,n){e.exports="## Creating a particle effect using PIXI.js\n\n[PixiJS](http://www.pixijs.com/) is a famous WebGL-wrapper, or in other words, a\nthing that gives you easy access to high graphics performance on a HTML canvas.\nI have seen a lot of beautiful hero canvases and thought something like that\ncould work for my personal website too. I modified\n[a pretty well-written codepen](https://codepen.io/jh3y/pen/VdMBaR?page=6) to\nproduce [this](https://mahepe.github.io/pixijs-effect/) effect I'm quite happy\nwith. I'll just go ahead and briefly describe how it works.\n\n### Initialization\n\nI wanted to use an existing canvas for my PIXI app, which can be achieved as\nfollows.\n\n```javascript\nconst canvas = document.getElementById(\"banner_canvas\");\nvar app = new PIXI.Application(window.innerWidth,\n                               window.innerHeight,\n                               {view: canvas,\n                                antialias: true,\n                                transparent: true});\n```\n\nFor performance and improved control over the particles, they are put into a\ncontainer.\n```javascript\nconst drops = new PIXI.Container();\napp.stage.addChild(drops)\n```\nWe want to draw circles. It's possible to use `PIXI.Graphics` for drawing shapes\nsuch as circles. However, it's very inefficient to execute a new graphics fill\non each draw call. A much better approach is to proceed as follows:\n\n1. Draw a circle using `PIXI.Graphics`.\n2. Save the circle in a texture.\n3. Use the texture to create a sprite for each particle.\n\n```javascript\n// Create a base graphic for our sprites\nconst p = new PIXI.Graphics()\np.beginFill(COLOR)\np.drawCircle(0, 0, 100)\np.endFill()\n\n// Generate a base texture from the base graphic\nconst baseTexture = app.renderer.generateTexture(p)\nlet particles = genParticles(baseTexture)\n```\n\n### The particle generator and the updater\n\nThe particle generator works like this (paraphrased), nothing that interesting\ngoing on there.\n\n```javascript\nconst genParticles = (texture) =>\n      new Array(AMOUNT).fill().map(p => {\n          var p = new PIXI.Sprite(texture);\n\n          // Spawn a particle at a random position\n          p.x = Math.random()*window.innerWidth;\n          p.y = Math.random()*window.innerHeight;\n\n          // Set an initial velocity.\n          p.vx = 1;\n\n          drops.addChild(p);\n          return p;\n      });\n```\nThe updater has some nice tricks.\n```javascript\napp.ticker.add(function(delta) {\n    if (\n        app.renderer.height !== innerHeight ||\n            app.renderer.width !== innerWidth\n    ) {\n        app.renderer.resize(innerWidth, innerHeight)\n        drops.removeChildren()\n        particles = genParticles(baseTexture)\n    }\n\n    for(let p of particles){\n        p.x += delta*p.vx;\n        p.y += delta*p.vy;\n        if(p.x >= window.innerWidth + 20){\n            p.x = -20;\n        }\n    }\n    app.renderer.render(drops);\n});\n```\nThis will reset the animation and regenerate everything in case the window is\nresized so that the animation will not appear distorted.\n```javascript\nif (\n    app.renderer.height !== innerHeight ||\n        app.renderer.width !== innerWidth\n) {\n    app.renderer.resize(innerWidth, innerHeight)\n    drops.removeChildren()\n    particles = genParticles(baseTexture)\n}\n```\nThis will put a particle that leaves the screen from the right slightly outside\nthe left side of the screen. This will give an impression of an infinite amount\nof particles.\n```javascript\nif(p.x >= window.innerWidth + 20){\n    p.x = -20;\n}\n```\n\n\n### Conclusion\n\nSince the resulting animation is pretty intense for a hero element,\nI combined it with some CSS masking to keep things under control. WebGL is\nreally powerful since I didn't observe any lag with `AMOUNT=2000`. All in all,\nI had a lot of fun making this, and I strongly recommend trying PIXI.js if you\nhaven't already.\n"}}]);
//# sourceMappingURL=component---src-pages-posts-pixijs-effect-jsx-56d2b5543f2e7a3e0706.js.map