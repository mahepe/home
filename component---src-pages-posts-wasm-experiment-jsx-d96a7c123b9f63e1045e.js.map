{"version":3,"sources":["webpack:///./src/pages/posts/wasm-experiment.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.jsx","webpack:///./src/components/layout.jsx","webpack:///./src/pages/posts/wasm-experiment.md"],"names":["IndexPage","post_content","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react_markdown__WEBPACK_IMPORTED_MODULE_3___default","source","md","_components_layout__WEBPACK_IMPORTED_MODULE_5__","_components_seo__WEBPACK_IMPORTED_MODULE_6__","title","keywords","className","id","href","xmlns","width","height","viewBox","d","document","$","ready","querySelectorAll","forEach","block","hljs","highlightBlock","addClass","e","highlight","__webpack_require__","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","ReactGA","initialize","window","pageview","search","Layout","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_5__","Fragment","rel","integrity","crossOrigin","to","Date","getFullYear","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_1__","node"],"mappings":"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","file":"component---src-pages-posts-wasm-experiment-jsx-d96a7c123b9f63e1045e.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport ReactMarkdown from 'react-markdown';\nimport $ from 'jquery';\nimport Layout from \"../../components/layout\";\nimport SEO from \"../../components/seo\";\nimport md from \"raw-loader!./wasm-experiment.md\";\nimport hljs from \"highlight.js\";\nimport 'highlight.js/styles/github.css';\n\nconst IndexPage = function(){\n    const html = (<ReactMarkdown source={md}/>);\n    const post_content = html;\n    const highlight = () => {\n        try{\n            if (typeof document !== 'undefined') {\n                $(document).ready(() => {\n                    document.querySelectorAll('pre code').forEach((block) => {\n                        hljs.highlightBlock(block);\n                    });\n                    $(\"h2\").addClass(\"mt-5 mb-5\");\n                    $(\"h3\").addClass(\"mt-5 mb-4\");\n                    $(\"h4\").addClass(\"mt-5 mb-4\");\n                });\n            }\n        } catch(e){ }\n    };\n    var s = (<Layout>\n              <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n              <div className=\"content_container\">\n                <div className=\"inner_container container p-5\">\n                  <div id=\"post_container\" className=\"row\">\n                    <div className=\"col-md-2\">\n                    </div>\n                    <div className=\"col-md-8\">\n                      <a href=\"https://github.com/mahepe/box2d-wasm-experiment\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" viewBox=\"0 0 24 24\"><path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"/></svg></a>\n                      {post_content}\n                    </div>\n                    <div className=\"col-md-2\">\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {highlight()}\n             </Layout>);\n    return s;\n};\n\nexport default IndexPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from \"react\";\nimport Helmet from 'react-helmet';\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport { Link } from \"gatsby\";\nimport ReactGA from 'react-ga';\n\nimport \"./style.scss\";\n\nReactGA.initialize('UA-135033691-1');\nif(typeof window !== 'undefined'){\n    ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\n\nconst Layout = ({ children }) => (\n    <StaticQuery\n      query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n      render={data => (\n          <>\n            <Helmet>\n              <link\n                rel=\"stylesheet\"\n                href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\"\n                integrity=\"sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS\"\n                crossOrigin=\"anonymous\"\n              />\n            </Helmet>\n            <div>\n              <div>\n                <nav className=\"navbar navbar-light\">\n                  <Link id=\"back_to_main\" to=\"/\">\n                    <span id=\"hello\">Hello</span>,<br/>\n                    I'm Matias\n                  </Link>\n                </nav>\n              </div>\n              <main>{children}</main>\n              <footer>\n                <div className=\"container text-center\">\n                  © {new Date().getFullYear()}, Built with\n                  {` `}\n                  <a href=\"https://www.gatsbyjs.org\">Gatsby</a>.\n              <Link to=\"/privacy\"> Privacy policy</Link>\n          </div>\n              </footer>\n            </div>\n          </>\n      )}\n    />\n);\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","module.exports = \"## Using Box2D and SDL2 in a WASM project\\n\\n**TL;DR:** *After some initial problems with CMake I had a great experience with\\nC++ to WASM. During this experiment, things that compiled natively, also\\ncompiled to WASM without any problems.*\\n\\nRecently on [HN](https://news.ycombinator.com/), there have been a lot of\\n[WASM](https://webassembly.org/)-related posts. The ability to run native code\\nin the browser sounds pretty amazing and I was blown away by [Funky\\nKarts](https://www.funkykarts.rocks/demo.html), a C++ game that the author\\ncompiled to WASM (and provided pretty detailed\\n[documentation](https://www.rossis.red/wasm.html#emscripten) of the\\nprocess). So far, WASM is a nascent technology and the success of your project\\nshouldn't probably depend on it. However, I wanted to get some sort of an idea\\nhow reliable it is at the moment and what would be possible with it. As a\\nresult, I produced [this](https://mahepe.github.io/box2d-wasm-experiment) tiny\\ndemo that renders things with SDL2 and uses\\n[Box2D](https://github.com/erincatto/Box2D) for movement and\\ncollision-detection. It looks pretty terrible, but I'm left convinced\\nthat it's possible to do *something* with WASM and even use some well-known\\nlibraries. Check the [repo](https://github.com/mahepe/box2d-wasm-experiment) for\\nfurther details.\\n\\n### Building\\n\\nI'm under the impression that at the moment CMake is the easiest way to build\\nyour C++ WASM project. I had no prior experience with CMake so it was pretty\\npainful to get the compile commands right at first. However, after getting into\\nterms with it, I really prefer CMake over graphical IDEs I'm used to when\\nlinking C++.\\n\\nWe can define a CMake script which enables us to compile to native target like\\nthis:\\n```bash\\ncmake ..\\nmake\\n```\\nAnd to WASM target like this:\\n```bash\\nemcmake cmake ..\\nemmake make\\n```\\nSee the [full\\nscript](https://github.com/mahepe/box2d-wasm-experiment/blob/master/CMakeLists.txt#L1-L35).\\n\\n#### Some details\\n\\nThis tells the linker where the includes and the sources are. At it's present\\nform, it takes everything from `./src/`.\\n```\\ninclude_directories(${CMAKE_SOURCE_DIR}/include/Box2D/)\\n\\nfile(GLOB SRC\\n    \\\"src/*.h\\\"\\n    \\\"src/*.cpp\\\"\\n)\\n```\\nWe can use a single CMake script for both native and WASM target.\\n```cmake\\nif (${CMAKE_SYSTEM_NAME} STREQUAL \\\"Emscripten\\\")\\n\\n    # If build target WASM.\\n\\nelse ()\\n\\n    # If build target native.\\n\\nendif ()\\n```\\n\\nSince the native and WASM libraries have to be compiled with different\\ncompilers, you'll need to take that into account in linking the project. In the\\nfollowing we put WASM libs to `./lib/web/` and native libs to `./lib/native/`.\\n\\n```cmake\\nif (${CMAKE_SYSTEM_NAME} STREQUAL \\\"Emscripten\\\")\\n  # ...\\n  link_directories(${CMAKE_SOURCE_DIR}/lib/web)\\n  # ...\\nelse ()\\n  # ...\\n  link_directories(${CMAKE_SOURCE_DIR}/lib/native)\\n  # ...\\nendif ()\\n```\\n\\nIt's worth pointing out that we use a different compiler for WASM.\\n\\n```cmake\\nif (${CMAKE_SYSTEM_NAME} STREQUAL \\\"Emscripten\\\")\\n  # ...\\n  set(CMAKE_CXX_COMPILER \\\"em++\\\")\\n  # ...\\nelse ()\\n  # ...\\nendif ()\\n```\\n\\nYou'll need to make similar changes to compile commands when compiling library\\nthat will be linked with an emscripten project.\\n\\n\\n### About the C++ part\\n\\nThe demo code isn't very interesting, I'll describe it on a general\\nlevel. The main loop is extremely generic.\\n```C++\\nvoid main_loop() {\\n  update();\\n  draw();\\n}\\n```\\n\\n#### The update function\\n\\nThe update function measures the time since the last frame and simulates physics\\nbased on the elapsed time (`Step` is a function defined in Box2D `World`\\nclass). Then any SDL events (such as keydown) are processed by first turning\\nthem our custom event object which are then passed to game objects (physical\\nthings you see on the screen).\\n```C++\\nvoid update() {\\n  // Tick the timer and simulate physics.\\n  timer.tick();\\n  world->Step(timer.delta, 1, 1);\\n\\n  // Loop through SDL_Events\\n  SDL_Event e;\\n  if (SDL_PollEvent(&e)) {\\n\\n    // Parse the SDL_Event to our custom event object.\\n    std::unique_ptr<EventData> event_data =\\n        std::unique_ptr<EventData>(new EventData(e));\\n\\n    // Loop through objects\\n    for (auto const &o : game_state->objects) {\\n      o->handle_event(event_data.get());\\n    }\\n\\n    // Break from the main loop if quit received.\\n    run = !event_data->quit;\\n  }\\n}\\n```\\nBy the way, notice a design-decision here. I wanted to be able to pass event\\ndata to all game objects, but they should respond to events differently based on\\nwhether they are, for example, the player or some other object. After [digging\\naround](https://stackoverflow.com/a/307793/3616581) a bit it seems that the OOP\\nway to do this is to inherit and override: The vector `game_state->objects`\\ncontains objects of a generic type `GameObject` which defines a virtual event\\nhandler that does nothing.\\n```C++\\nclass GameObject {\\n\\n/* ... */\\n\\n  virtual void handle_event(EventData *event_data) {}\\n\\n/* ... */\\n\\n};\\n```\\nThe `Player` class inherits `GameObject` and overrides the superclass\\n`handle_event` to change the player velocity.\\n```C++\\nclass Player : public GameObject {\\n\\n/* ... */\\n\\n  void handle_event(EventData *event_data) override {\\n  // Alter the player velocity.\\n  }\\n\\n/* ... */\\n\\n};\\n```\\nSee the [complete\\ngame_object.h](https://github.com/mahepe/box2d-wasm-experiment/blob/626a8c81c6e1fac32967eef9b3cb893a554266f7/src/game_object.h#L1-L78)\\nfor details.\\n\\n#### The render function\\n\\nThe render function is quite self-explanatory.\\n```C++\\nvoid draw() {\\n\\n  // Clear the screen.\\n  SDL_RenderClear(interface->renderer.get());\\n\\n  // Invoke render() of each GameObject.\\n  for (auto const &o : game_state->objects) {\\n    o->render(interface.get(), game_state->camera->GetPosition(), screen_size);\\n  }\\n\\n  // Flip the buffers.\\n  SDL_RenderPresent(interface->renderer.get());\\n}\\n```\\n[The\\nimplementation](https://github.com/mahepe/box2d-wasm-experiment/blob/626a8c81c6e1fac32967eef9b3cb893a554266f7/src/game_object.h#L28-L36)\\nof `render()` in `GameObject` takes care of positioning the sprites according to\\nthe Box2D body positions.\\n\\n\""],"sourceRoot":""}