{"version":3,"sources":["webpack:///./src/pages/posts/pixijs-effect.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.jsx","webpack:///./src/components/layout.jsx","webpack:///./src/pages/posts/pixijs-effect.md"],"names":["IndexPage","post_content","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react_markdown__WEBPACK_IMPORTED_MODULE_3___default","source","md","_components_layout__WEBPACK_IMPORTED_MODULE_5__","_components_seo__WEBPACK_IMPORTED_MODULE_6__","title","keywords","className","id","document","$","ready","querySelectorAll","forEach","block","hljs","highlightBlock","e","highlight","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Layout","gatsby__WEBPACK_IMPORTED_MODULE_3__","Fragment","rel","href","integrity","crossOrigin","Date","getFullYear","to","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","node"],"mappings":"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","file":"component---src-pages-posts-pixijs-effect-jsx-3a25db2b176bd7430ded.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport ReactMarkdown from 'react-markdown';\nimport $ from 'jquery';\nimport Layout from \"../../components/layout\";\nimport SEO from \"../../components/seo\";\nimport md from \"raw-loader!./pixijs-effect.md\";\nimport hljs from \"highlight.js\";\nimport 'highlight.js/styles/github.css';\n\nconst IndexPage = function(){\n    const html = (<ReactMarkdown source={md}/>);\n    const post_content = html;\n    const highlight = () => {\n        try{\n            if (typeof document !== 'undefined') {\n                $(document).ready(() => {\n                    document.querySelectorAll('pre code').forEach((block) => {\n                        hljs.highlightBlock(block);\n                    });\n                });\n            }\n        } catch(e){ }\n    };\n    return (<Layout>\n              <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n              <div className=\"content_container\">\n                <div className=\"inner_container container p-5\">\n                  <div id=\"post_container\" className=\"row\">\n                    <div className=\"col-md-2\">\n                    </div>\n                    <div className=\"col-md-8\">\n                      <h2 className=\"mt-5 mb-5\">Creating a delightful PIXI.js particle effect</h2>\n                      {post_content}\n                    </div>\n                    <div className=\"col-md-2\">\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {highlight()}\n            </Layout>);\n};\n\nexport default IndexPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport { Link } from \"gatsby\";\n\nimport \"./style.scss\";\n\nconst Layout = ({ children }) => (\n    <StaticQuery\n      query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n      render={data => (\n          <>\n            <link\n              rel=\"stylesheet\"\n              href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\"\n              integrity=\"sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS\"\n              crossOrigin=\"anonymous\"\n            />\n            <div>\n              <main>{children}</main>\n              <footer>\n                <div className=\"container\">\n                  © {new Date().getFullYear()}, Built with\n                  {` `}\n                  <a href=\"https://www.gatsbyjs.org\">Gatsby</a>. <Link\n                                                                 to=\"/privacy\">Privacy policy</Link>\n                </div>\n              </footer>\n            </div>\n          </>\n      )}\n    />\n);\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","module.exports = \"\\n\""],"sourceRoot":""}